<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="Button" x:Key="MainButton" >
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource MainButtonsColorBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MainFontColorBrush}"/>
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="0" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightBackgroundButtonBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource HighlightFontButtonBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsPressedBackgroundButtonBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource IsPressedFontButtonBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisableBackgroundColorBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource DisableFontColorBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="SecondaryButton">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryFontColorBrush}" />
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColorBrush}"/>
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderThickness="1.2" BorderBrush="{DynamicResource MainBorderColorBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource HighlightBackgroundButtonBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource HighlightFontButtonBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource IsPressedBackgroundButtonBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource IsPressedFontButtonBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisableBackgroundColorBrush}"/>
                <Setter Property="TextElement.Foreground" Value="{DynamicResource DisableFontColorBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBorderColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalFontColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundColorBrush}"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Padding" Value="10, 10, 0, 10"/>
    </Style>
    <Style TargetType="TextBox" x:Key="Text">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalFontColorBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource NormalFontColorBrush}"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="5,3,5,0"/>
    </Style>
    <Style TargetType="PasswordBox" x:Key="Password">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalFontColorBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource NormalFontColorBrush}"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Padding" Value="5,3,5,0"/>
    </Style>
    <Style TargetType="Label">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalFontColorBrush}"/>
    </Style>
    <Style TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{DynamicResource NormalFontColorBrush}"/>
    </Style>

</ResourceDictionary>

